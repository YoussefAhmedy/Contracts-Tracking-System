// <auto-generated />
using System;
using Contract_Tracking_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contract_Tracking_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contract_Tracking_System.Models.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ContractKind")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndContract")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartContract")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Contracts", (string)null);
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerKind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "الرياض - شارع الملك فهد",
                            CreatedAt = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerKind = "شركة",
                            EmailAddress = "info@futuretech.com",
                            Name = "شركة المستقبل للتقنية",
                            Phone = "0551234567"
                        },
                        new
                        {
                            ID = 2,
                            Address = "جدة - حي الشاطئ",
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerKind = "فرد",
                            EmailAddress = "m.ahmed@example.com",
                            Name = "محمد أحمد",
                            Phone = "0509876543"
                        },
                        new
                        {
                            ID = 3,
                            Address = "الدمام - شارع الخليج",
                            CreatedAt = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerKind = "شركة",
                            EmailAddress = "contact@modernbuild.com",
                            Name = "شركة البناء الحديث",
                            Phone = "0532223334"
                        },
                        new
                        {
                            ID = 4,
                            Address = "مكة المكرمة - حي الزاهر",
                            CreatedAt = new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerKind = "فرد",
                            EmailAddress = "ahmed.s@example.com",
                            Name = "أحمد سعيد",
                            Phone = "0561112223"
                        },
                        new
                        {
                            ID = 5,
                            Address = "الخبر - طريق الملك عبدالله",
                            CreatedAt = new DateTime(2025, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerKind = "شركة",
                            EmailAddress = "sales@smartsolutions.com",
                            Name = "شركة الحلول الذكية",
                            Phone = "0595556667"
                        });
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Guarantee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ContractID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("GuaranteeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GuaranteeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.HasIndex("ContractID");

                    b.ToTable("guarantees", (string)null);
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Contract", b =>
                {
                    b.HasOne("Contract_Tracking_System.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Guarantee", b =>
                {
                    b.HasOne("Contract_Tracking_System.Models.Contract", "Contract")
                        .WithMany("Guarantees")
                        .HasForeignKey("ContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Contract", b =>
                {
                    b.Navigation("Guarantees");
                });

            modelBuilder.Entity("Contract_Tracking_System.Models.Customer", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}

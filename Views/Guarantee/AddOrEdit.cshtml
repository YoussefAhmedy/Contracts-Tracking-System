@model Guarantee
@using System.Text.Json

<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>إضافة ضمان جديد</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f4f6f9;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .card {
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .form-label {
            font-weight: 600;
        }

        .btn-submit {
            background-color: #4e73df;
            color: white;
            font-weight: 600;
        }

            .btn-submit:hover {
                background-color: #2e59d9;
            }

        .container {
            margin-top: 50px;
            max-width: 700px;
        }

        /* Validation colors */
        .is-valid {
            border: 2px solid #28a745 !important; /* أخضر */
        }

        .is-invalid {
            border: 2px solid #dc3545 !important; /* أحمر */
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card p-4">
            <h2 class="text-center mb-4">إضافة ضمان جديد</h2>
            <form autocomplete="off" method="post" id="guaranteeForm">
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">اسم الضمان</label>
                    <input asp-for="Name" type="text" class="form-control" id="Name" maxlength="150" placeholder="أدخل اسم الضمان" required>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="GuaranteeStart" class="form-label">تاريخ بداية الضمان</label>
                    <input asp-for="GuaranteeStart" type="date" class="form-control" id="GuaranteeStart" required>
                    <span asp-validation-for="GuaranteeStart" class="text-danger" id="startError"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="GuaranteeEnd" class="form-label">تاريخ نهاية الضمان</label>
                    <input asp-for="GuaranteeEnd" type="date" class="form-control" id="GuaranteeEnd" required>
                    <span asp-validation-for="GuaranteeEnd" class="text-danger" id="endError"></span>
                </div>

                <!-- اختيار العقد المرتبط -->
                <div class="mb-3 position-relative">
                    <label class="form-label">العقد</label>
                    <input type="text" class="form-control" id="ContractName" placeholder="اكتب اسم العقد" required>
                    <input asp-for="ContractID" type="hidden" id="ContractID" />
                    <div id="contract-list" class="autocomplete-items"></div>
                    <span asp-validation-for="ContractID" class="text-danger" id="contractError"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label">الوصف</label>
                    <textarea asp-for="Description" class="form-control" id="Description" rows="3" maxlength="500" placeholder="أي ملاحظات إضافية"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-submit btn-lg">حفظ الضمان</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // جلب العقود (id + name) من الكنترولر
        const contracts = @Html.Raw(JsonSerializer.Serialize(ViewBag.Contracts));

        const input = document.getElementById("ContractName");
        const hiddenId = document.getElementById("ContractID");
        const list = document.getElementById("contract-list");
        const contractError = document.getElementById("contractError");

        const startInput = document.getElementById("GuaranteeStart");
        const endInput = document.getElementById("GuaranteeEnd");
        const startError = document.getElementById("startError");
        const endError = document.getElementById("endError");

        // autocomplete للعقود
        input.addEventListener("input", function () {
            const val = this.value;
            list.innerHTML = "";
            hiddenId.value = "";
            if (!val) return;
            const matches = contracts.filter(c => c.name.toLowerCase().includes(val.toLowerCase()));
            matches.forEach(match => {
                const div = document.createElement("div");
                div.textContent = match.name;
                div.addEventListener("click", function () {
                    input.value = match.name;
                    hiddenId.value = match.id;
                    list.innerHTML = "";
                    input.classList.remove("is-invalid");
                    input.classList.add("is-valid");
                    contractError.textContent = "";
                });
                list.appendChild(div);
            });
        });

        document.addEventListener("click", function (e) {
            if (e.target !== input) list.innerHTML = "";
        });

        // validation
        function setValid(input, errorSpan, message = "") {
            if (message) {
                input.classList.add("is-invalid");
                input.classList.remove("is-valid");
                errorSpan.textContent = message;
            } else {
                input.classList.remove("is-invalid");
                input.classList.add("is-valid");
                errorSpan.textContent = "";
            }
        }

        document.getElementById("guaranteeForm").addEventListener("submit", function (e) {
            let valid = true;

            // check contract
            const contract = contracts.find(c => c.name === input.value);
            if (!contract) {
                setValid(input, contractError, "⚠️ يجب اختيار عقد من القائمة.");
                hiddenId.value = "";
                valid = false;
            } else {
                hiddenId.value = contract.id;
                setValid(input, contractError);
            }

            // check dates
            if (startInput.value && endInput.value) {
                const startDate = new Date(startInput.value);
                const endDate = new Date(endInput.value);
                if (startDate > endDate) {
                    setValid(startInput, startError, "⚠️ تاريخ البداية لا يمكن أن يكون بعد تاريخ النهاية.");
                    setValid(endInput, endError, "⚠️ تاريخ النهاية لا يمكن أن يكون قبل تاريخ البداية.");
                    valid = false;
                } else {
                    setValid(startInput, startError);
                    setValid(endInput, endError);
                }
            } else {
                if (!startInput.value) {
                    setValid(startInput, startError, "⚠️ يجب إدخال تاريخ البداية.");
                    valid = false;
                }
                if (!endInput.value) {
                    setValid(endInput, endError, "⚠️ يجب إدخال تاريخ النهاية.");
                    valid = false;
                }
            }

            if (!valid) {
                e.preventDefault();
                alert("⚠️ الرجاء تصحيح الأخطاء قبل الحفظ.");
            }
        });
    </script>
</body>
</html>